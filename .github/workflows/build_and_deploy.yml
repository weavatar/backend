name: Build and Deploy
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build
        run: |
          go mod download
          CGO_ENABLED=0 GOAMD64=v3 go build -ldflags '-s -w --extldflags "-static"' -o ${{ vars.PROJECT_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ vars.PROJECT_NAME }}
          path: |
            ${{ vars.PROJECT_NAME }}
            database
            public
            storage
  deploy_development:
    runs-on: ubuntu-latest
    needs: build
    environment: development
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.PROJECT_NAME }}
          path: .
      - name: Set up SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass
      - name: Deploy to development
        env:
          SSHPASS: ${{ secrets.DEVELOPMENT_SERVER_PASSWORD }}
        run: |
          mv ${{ vars.PROJECT_NAME }} ${{ vars.PROJECT_NAME }}@new
          sshpass -e scp -o StrictHostKeyChecking=no -P ${{ secrets.DEVELOPMENT_SERVER_PORT }} -r ${{ vars.PROJECT_NAME }}@new database public storage ${{ secrets.DEVELOPMENT_SERVER_USER }}@${{ secrets.DEVELOPMENT_SERVER_IP }}:${{ secrets.DEVELOPMENT_SERVER_PATH }}
          sshpass -e ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEVELOPMENT_SERVER_PORT }} ${{ secrets.DEVELOPMENT_SERVER_USER }}@${{ secrets.DEVELOPMENT_SERVER_IP }} "supervisorctl stop ${{ vars.PROJECT_NAME }}" || true
          sshpass -e ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEVELOPMENT_SERVER_PORT }} ${{ secrets.DEVELOPMENT_SERVER_USER }}@${{ secrets.DEVELOPMENT_SERVER_IP }} "rm -f ${{ secrets.DEVELOPMENT_SERVER_PATH }}/${{ vars.PROJECT_NAME }} && mv ${{ secrets.DEVELOPMENT_SERVER_PATH }}/${{ vars.PROJECT_NAME }}@new ${{ secrets.DEVELOPMENT_SERVER_PATH }}/${{ vars.PROJECT_NAME }} && chmod -R 755 ${{ secrets.DEVELOPMENT_SERVER_PATH }} && chown -R www:www ${{ secrets.DEVELOPMENT_SERVER_PATH }} && supervisorctl start ${{ vars.PROJECT_NAME }}"
  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ gitea.ref == 'refs/heads/main' }}
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.PROJECT_NAME }}
          path: .
      - name: Set up SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass
      - name: Deploy to production
        env:
          SSHPASS: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
        run: |
          mv ${{ vars.PROJECT_NAME }} ${{ vars.PROJECT_NAME }}@new
          sshpass -e scp -o StrictHostKeyChecking=no -P ${{ secrets.PRODUCTION_SERVER_PORT }} -r ${{ vars.PROJECT_NAME }}@new database public storage ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_IP }}:${{ secrets.PRODUCTION_SERVER_PATH }}
          sshpass -e ssh -o StrictHostKeyChecking=no -p ${{ secrets.PRODUCTION_SERVER_PORT }} ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} "supervisorctl stop ${{ vars.PROJECT_NAME }}" || true
          sshpass -e ssh -o StrictHostKeyChecking=no -p ${{ secrets.PRODUCTION_SERVER_PORT }} ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} "rm -f ${{ secrets.PRODUCTION_SERVER_PATH }}/${{ vars.PROJECT_NAME }} && mv ${{ secrets.PRODUCTION_SERVER_PATH }}/${{ vars.PROJECT_NAME }}@new ${{ secrets.PRODUCTION_SERVER_PATH }}/${{ vars.PROJECT_NAME }} && chmod -R 755 ${{ secrets.PRODUCTION_SERVER_PATH }} && chown -R www:www ${{ secrets.PRODUCTION_SERVER_PATH }} && supervisorctl start ${{ vars.PROJECT_NAME }}"
